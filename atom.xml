<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一吻江山</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-27T14:33:34.008Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>jason zhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mitmproxy-and-charles-use</title>
    <link href="http://yoursite.com/2019/09/27/mitmproxy-and-charles-use/"/>
    <id>http://yoursite.com/2019/09/27/mitmproxy-and-charles-use/</id>
    <published>2019-09-27T14:30:52.000Z</published>
    <updated>2019-09-27T14:33:34.008Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>mitmproxy是命令行界面，不太方便查看，自己遇到的问题有：</p><ul><li>在Flow Details界面不知道用哪个快捷键查看下一条或上一条网络请求详情</li><li>json中的中文显示为 \ua9b4 或 ？不能看清是哪个中文</li><li>不知道怎么复制界面中显示的内容</li></ul><p>Charles的编程能力弱</p><p>把Charles和mitmproxy结合起来使用，可以查看方便、编程扩展</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>电脑和手机都连接到同一个Wi-Fi, 比如TP_LINK_629F<br>电脑: ip=192.168.1.100; 运行着Charles、mitmproxy<br>Charles: 192.168.1.100:8888<br>mitmproxy: 192.168.1.100:8080<br>手机: 设置代理地址为Charles的地址192.168.1.100:8888</p><p>Charles - External Proxy Settings功能开启：</p><ul><li>Web Proxy(HTTP) - Web Proxy Server设置为mitmproxy的地址192.168.1.100:8080</li><li>Secure Web Proxy(HTTPS) - Secure Web Proxy Server设置为mitmproxy的地址192.168.1.100:8080</li></ul><table><thead><tr><th align="center">手机</th></tr></thead><tbody><tr><td align="center"><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6s2bq3vglj30u01hcaak.jpg" alt></td></tr><tr><td align="center"></td></tr><tr><td align="center">Charles - External Proxy Settings</td></tr><tr><td align="center"></td></tr><tr><td align="center"><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6s2ks0wauj31am0qe76x.jpg" alt></td></tr></tbody></table><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>应用：自动生成接口的python代码</p><p>以<code>趣头条App</code>为例：<br>阅读得积分的接口为: <code>https://api.1sapp.com/readtimer/report</code><br>自动生成的代码大约如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">def readtimer_report(self):</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">&apos;User-Agent&apos;: &apos;qukan_android;retrofit/2.4.0 okhttp/3.11.0;os/7.0 M5 Note Meizu;device/862546036581345;version/3.9.41.000.0904.1121;channel/012&apos;,</span><br><span class="line">&apos;Host&apos;: &apos;api.1sapp.com&apos;,</span><br><span class="line">&apos;Accept-Encoding&apos;: &apos;gzip&apos;,</span><br><span class="line">&apos;Connection&apos;: &apos;keep-alive&apos;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    params = &#123;</span><br><span class="line">&apos;qdata&apos;: &apos;NzVFNkE3Mjc0RjEzRkYwRTM5OTEzNjAyRUZBMDMzQTAuY0dGeVlXMGZPR0kyTldKalltTXRNVGczT1MwME9EZGlMVGszT0RBdE1EUmlOVEV3TWpOak9UazRIblpsY25OcGIyNGZNVEVlY0d4aGRHWnZjbTBmWVc1a2NtOXBaQjVsWXg4eC46LxvyIvgD62/T93SlANmywpigTwlOwcfCHe0iZ1D8mH1zpslt2JCRPdiHOj1M20bU0zDX0odUOBig6Kt51mheNJuQYeDvp15R8RSGTT3LR9s55nBCGvWyTLq+3pjEvkyERElR9E2I384/nHQR4iqxqv7LKQ4rBA0R6bNG8sksHqNl1izSbF87G/4/Qw5vVYcuNUfU0BM6vvIbsy2CTPWlJ51YCzadQZZLONuaYTpyhuOiUV4vnx6qkvpYDNp9XpPPjbXxJAb7fikqjWSdyx167hXDPzUkNZGndjZsv7kQANDkIk2Dm+g5YW1I49xnkOzJkmxvyrLevnsSb9S5fSEUEyfq0GlPHE0RRBeSjFxVltH1zdZraTtk13Z+MvA7HBYQONz/0OwyMnujc1Ety91uKh6YCCVEDvBO+RTOzoRDa3nlRo3FTo9OeRBsyL20qIP24977MMYXEoxinTuwNonipCjnjSYIrhOu6cyv7uxuLd6FxtmTsydawNGMPI/K+habIKXNUFsQMCUcAGhYpoKQJvkQqHEq6lPyZZzXDot1EsN6bsGj56xQdiuJZLMFyZaGNR6E9FmVlI0LAVT8ttVpOvs+5f08T0iMxMNb0VQk6DOySpYHp7EVjc9YFpPcVxj8aXvuTjoPkaNGhSKQ0fgBd8HVRLslcnzX0QLJkTuU7NQ9aili6m2M2hWvh/q8ghWrvtLT+izCiFNKHE+4GTC9J6jqgyjHsXkAjcOSBAaIXMQKnOd664hdoR2GqV+GAy95fc5zZCJ7EFvzmTbJQrpMOwW+Y2NvYPZtgjw1uJEyU7AR7nVw7VqMjPpCDYeWBWoQ1W4OjlXTqgBR4MIu1sTag6a+my/0hItf91SNa58zCN3YmE2NnsWwwiCC+ZP91moV/KqPwX3vMLKW4/3Vsziqe8gl&apos;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    data = &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    url = &apos;http://api.1sapp.com/readtimer/report&apos;</span><br><span class="line">    result = self._get(url, headers=headers, params=params, data=data)</span><br><span class="line">    return result</span><br></pre></td></tr></table></figure><p>应用步骤：</p><ol><li>手机按上面环境设置好代理地址</li><li>在电脑上启动Charles，Charles按上面环境设置</li><li>在电脑上启动mitimproxy, 启动命令如下：<code>mitmproxy -s gen_code_mitm.py</code></li><li>文件gen_code_mitm.py内容参考下面</li><li>在手机<code>趣头条App</code>阅读文章或看视频一定时间</li><li>会在<code>~/Desktop/api/</code>目录下生成一个叫<code>readtimer_report.text</code></li><li>把<code>readtimer_report.text</code>的相应代码复制粘帖到<code>文件qu_tou_tiao.py</code>中</li><li>按需要修改自动生成的代码为希望的样子</li><li>运行<code>qu_tou_tiao.py</code></li></ol><p>注意：</p><ul><li><code>readtimer_report.text</code>的名字和所在目录是由代码<code>gen_code_mitm.py</code>决定的，请自行阅读修改</li><li><code>readtimer_report</code>方法名由代码<code>gen_code_mitm.py</code>决定的，请自行阅读修改</li><li>对body为复杂json格式的代码自动生成会有错误，有能力的自行修改</li><li><code>readtimer/report</code>这个接口自动生成的代码数据是不能重复获取积分的，这里只是演示</li></ul><p><img src="https://tva1.sinaimg.cn/large/006y8mN6ly1g6s4idpz9gj31fa0u045o.jpg" alt></p><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><p>文件qu_tou_tiao.py: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;</span><br><span class="line">代码模板</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import logging</span><br><span class="line"></span><br><span class="line">logging.basicConfig(format=&apos;%(asctime)s:%(message)s&apos;, datefmt=&apos;%m-%d %H:%M:%S&apos;, level=logging.INFO)</span><br><span class="line"></span><br><span class="line">class User(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line">        </span><br><span class="line">    def api_need_implement(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def _header(self):</span><br><span class="line">        return &#123;</span><br><span class="line">            &apos;User-Agent&apos;: &apos;&apos;,</span><br><span class="line">            &apos;Cookie&apos;:self.cookie</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def _post(url, data=None, json=None, p=logging.warning, **kwargs):</span><br><span class="line">        res = requests.post(url, data=data, **kwargs)</span><br><span class="line">        result = res.text</span><br><span class="line">        p(res.json())</span><br><span class="line">        logging.info(&apos;&apos;)</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    def _get(url, params=None, p=logging.warning, **kwargs):</span><br><span class="line">        res = requests.get(url, params=params, **kwargs)</span><br><span class="line">        result = res.text</span><br><span class="line">        p(json.loads(result))</span><br><span class="line">        logging.info(&apos;&apos;)</span><br><span class="line">        return result</span><br><span class="line"></span><br><span class="line">def genUsers():</span><br><span class="line">    yield User()</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    for user in genUsers():</span><br><span class="line">        user.api_need_implement()</span><br></pre></td></tr></table></figure><p>文件gen_code_mitm.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">import json</span><br><span class="line">from urllib.parse import urlparse</span><br><span class="line"></span><br><span class="line">from mitmproxy import ctx</span><br><span class="line">from mitmproxy import flowfilter</span><br><span class="line">from mitmproxy import http</span><br><span class="line"></span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">生成接口python代码</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">class GenCode(object):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        ctx.log.info(&apos;__init__&apos;)</span><br><span class="line">        # 趣头条</span><br><span class="line">        urls = [</span><br><span class="line">            r&apos;api-coin-service.aiclk.com/coin/service&apos;,</span><br><span class="line">            r&apos;readtimer/report&apos;,     </span><br><span class="line">        ]</span><br><span class="line">        self.qu_tou_tiao = flowfilter.parse(&apos;|&apos;.join(urls))        </span><br><span class="line"></span><br><span class="line">    def response(self, flow: http.HTTPFlow):</span><br><span class="line">        if self.qu_tou_tiao(flow):</span><br><span class="line"></span><br><span class="line">            request: http.HTTPRequest = flow.request</span><br><span class="line"></span><br><span class="line">            parse_result = urlparse(request.url)</span><br><span class="line">            url_path = parse_result.path</span><br><span class="line"></span><br><span class="line">            function_name = url_path.replace(&apos;/&apos;,&apos;_&apos;).strip(&apos;_&apos;)</span><br><span class="line">            headers_code = self.headers_string(flow)</span><br><span class="line">            params_code = self.params_string(flow)</span><br><span class="line">            data_code = self.data_string(flow) </span><br><span class="line"></span><br><span class="line">            path = f&apos;&apos;&apos;/Users/zhoujie/Desktop/api/&#123;function_name&#125;.text&apos;&apos;&apos;  </span><br><span class="line">            with open(path, &apos;a&apos;) as f:</span><br><span class="line">                print(f&apos;&apos;&apos;# ---------------------&apos;&apos;&apos;,file=f)</span><br><span class="line"></span><br><span class="line">                code = f&apos;&apos;&apos;</span><br><span class="line">def &#123;function_name&#125;(self):</span><br><span class="line"></span><br><span class="line">    &#123;headers_code&#125;</span><br><span class="line"></span><br><span class="line">    &#123;params_code&#125;</span><br><span class="line"></span><br><span class="line">    &#123;data_code&#125;</span><br><span class="line"></span><br><span class="line">    url = &apos;&#123;request.scheme&#125;://&#123;request.pretty_host&#125;&#123;url_path&#125;&apos;</span><br><span class="line">    result = self._&#123;request.method.lower()&#125;(url, headers=headers, params=params, data=data)</span><br><span class="line">    return result</span><br><span class="line">                </span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">                f.write(code)</span><br><span class="line"></span><br><span class="line">                print(f&apos;&apos;&apos;Response:&apos;&apos;&apos;,file=f)</span><br><span class="line">                print(f&apos;&apos;&apos;&#123;flow.response.text&#125;&apos;&apos;&apos;,file=f)</span><br><span class="line">                print(f&apos;&apos;&apos;# ---------------------\n\n&apos;&apos;&apos;,file=f)</span><br><span class="line"></span><br><span class="line">    def headers_string(self, flow: http.HTTPFlow):</span><br><span class="line">        lines = &apos;&apos;</span><br><span class="line">        for key,value in flow.request.headers.items():</span><br><span class="line">            lines += f&quot;\n\t\t&apos;&#123;key&#125;&apos;: &apos;&#123;value&#125;&apos;,&quot;</span><br><span class="line">        s = f&apos;&apos;&apos;headers = &#123;&#123;&#123;lines&#125;\n\t&#125;&#125;&apos;&apos;&apos;        </span><br><span class="line">        return s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def params_string(self, flow: http.HTTPFlow):</span><br><span class="line">        lines = &apos;&apos;</span><br><span class="line">        for key,value in flow.request.query.items():</span><br><span class="line">            lines += f&quot;\n\t\t&apos;&#123;key&#125;&apos;: &apos;&#123;value&#125;&apos;,&quot;</span><br><span class="line">        s = f&apos;&apos;&apos;params = &#123;&#123;&#123;lines&#125;\n\t&#125;&#125;&apos;&apos;&apos;        </span><br><span class="line">        return s</span><br><span class="line"></span><br><span class="line">    def data_string(self, flow: http.HTTPFlow):</span><br><span class="line">        &apos;&apos;&apos;</span><br><span class="line">        Content-Type: application/x-www-form-urlencoded</span><br><span class="line">        Content-Type: application/json; charset=utf-8</span><br><span class="line">        Content-Type: text/plain;charset=utf-8</span><br><span class="line">        &apos;&apos;&apos;</span><br><span class="line">        lines = &apos;&apos;</span><br><span class="line"></span><br><span class="line">        # [urlencoded_form, multipart_form, plan, json]取其一</span><br><span class="line">        for key,value in flow.request.urlencoded_form.items():</span><br><span class="line">            lines += f&quot;\n\t\t&apos;&#123;key&#125;&apos;: &apos;&#123;value&#125;&apos;,&quot;</span><br><span class="line"></span><br><span class="line">        for key,value in flow.request.multipart_form.items():</span><br><span class="line">            lines += f&quot;\n\t\t&apos;&#123;key&#125;&apos;: &apos;&#123;value&#125;&apos;,&quot;</span><br><span class="line"></span><br><span class="line">        # Todo:复杂json数据还不能代码化</span><br><span class="line">        if &apos;application/json&apos; in flow.request.headers.get(&apos;content-type&apos;,&apos;&apos;):</span><br><span class="line">            d = json.loads(flow.request.text)</span><br><span class="line">            for key,value in d.items():</span><br><span class="line">                lines += f&quot;\n\t\t&apos;&#123;key&#125;&apos;: &#123;value&#125;,&quot;</span><br><span class="line">        </span><br><span class="line">        s = f&apos;&apos;&apos;data = &#123;&#123;&#123;lines&#125;\n\t&#125;&#125;&apos;&apos;&apos;        </span><br><span class="line">        return s</span><br><span class="line"></span><br><span class="line">addons = [</span><br><span class="line">    GenCode()</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;mitmproxy是命令行界面，不太方便查看，自己遇到的问题有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Flow Detai
      
    
    </summary>
    
    
    
      <category term="mitmproxy" scheme="http://yoursite.com/tags/mitmproxy/"/>
    
      <category term="charles" scheme="http://yoursite.com/tags/charles/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/27/hello-world/"/>
    <id>http://yoursite.com/2019/09/27/hello-world/</id>
    <published>2019-09-27T13:34:13.443Z</published>
    <updated>2019-09-27T13:34:13.444Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
